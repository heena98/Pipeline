pipeline {
    // Define the agent where the pipeline will run
    agent { 
        node {
            // Specify the label of the node to use, in this case, 'maven'
            label 'maven'
        }
    }
    
    // Set environment variables
    environment {
        // Add Maven to the PATH environment variable
        PATH = "/opt/apache-maven-3.9.2/bin:$PATH"
    }

    // Define the stages of the pipeline
    stages {
        stage('build') {
            // Define the steps to execute in the 'build' stage
            steps {
                script {
                    try {
                        // Run the Maven clean and deploy commands
                        sh 'mvn clean deploy'
                    } catch (Exception e) {
                        // Handle any exceptions that occur during the build
                        echo "Build failed: ${e.message}"
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('SonarQube analysis') {
            // Set environment variables specific to this stage
            environment {
                // Define the SonarQube scanner home directory
                scannerHome = tool 'SkyGuardians-sonar-scanner'
            }
            steps {
                // Run the SonarQube analysis
                withSonarQubeEnv('My SonarQube Server') { // If you have configured more than one global server connection, you can specify its name
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
    }
}
